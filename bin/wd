#!/usr/bin/env node
const program = require('commander')
const pkg = require('../package.json')

const cmds = {
  label: require('../configs/label'),
  claims: require('../configs/claims'),
  data: require('../configs/data'),
  props: require('../configs/props'),
  id: require('../configs/id'),
  sparql: require('../configs/sparql'),
  query: require('../configs/query'),
  open: require('../configs/open'),
  coord: require('../configs/coord'),
  config: require('../configs/config')
}

const cmdsList = Object.keys(cmds)

program
.version(pkg.version)
.command(`label ${cmds.label.args}`, cmds.label.description)
.command(`claims ${cmds.claims.args}`, cmds.claims.description)
.command(`data ${cmds.data.args}`, cmds.data.description)
.command(`props ${cmds.props.args}`, cmds.props.description)
.command(`id ${cmds.id.args}`, cmds.id.description).alias('wikiqid')
.command(`sparql ${cmds.sparql.args}`, cmds.sparql.description)
.command(`query ${cmds.query.args}`, cmds.query.description)
.command(`open ${cmds.open.args}`, cmds.open.description)
.command(`coord ${cmds.coord.args}`, cmds.coord.description)
.command(`config ${cmds.config.args}`, cmds.config.description)
.parse(process.argv)

const commandName = program.args[0]

if (!cmdsList.includes(commandName)) {
  console.error('unknown command')
  program.help()
  process.exit(1)
}
