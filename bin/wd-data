#!/usr/bin/env node
const program = require('../lib/program')
program.process('data')
const wdk = require('../lib/customized_wdk')(program)
const _ = require('lodash')
const error_ = require('../lib/error')

const parseId = require('../lib/tolerant_id_parser')
const ids = program.args.map(parseId)

if (!(ids && ids.length > 0)) return program.help()

const requestedIdsLenght = ids.length

ids.forEach(id => {
  if (!wdk.isEntityId(id)) throw new Error(`invalid entity id: ${id}`)
})

const lightGet = require('../lib/light_get')
const url = wdk.customize('getEntities', ids)
const logJSON = (data) => console.log(JSON.stringify(data, null, 2))

lightGet(url)
.then(body => {
  const entities = _.values(body.entities)
  if (requestedIdsLenght === 1) {
    logJSON(entities[0])
  } else {
    logJSON(entities)
  }
})
.catch(error_.log)
