#!/usr/bin/env node
const program = require('../lib/program')
program.option('-s, --simplify', 'get simplified entities data')
program.option('-p, --props <props>', 'request only certain properties')
program.process('data')

const { simplify } = program
const props = program.props && program.props.replace(/,/g, '|')

const wdk = require('../lib/customized_wdk')(program)
const _ = require('lodash')
const error_ = require('../lib/error')

const parseId = require('../lib/tolerant_id_parser')
const logNdjson = require('../lib/log_ndjson')
const ids = program.args.map(parseId)

if (!(ids && ids.length > 0)) return program.help()

const requestedIdsLenght = ids.length

ids.forEach(id => {
  if (!wdk.isEntityId(id)) throw new Error(`invalid entity id: ${id}`)
})

const lightGet = require('../lib/light_get')
const url = wdk.customize('getEntities', { ids, props })

lightGet(url)
.then(body => {
  var entities = _.values(body.entities)
  if (simplify) entities = entities.map(wdk.simplify.entity)
  if (requestedIdsLenght === 1) {
    console.log(JSON.stringify(entities[0]))
  } else {
    logNdjson(entities)
  }
})
.catch(error_.log)
