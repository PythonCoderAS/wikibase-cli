#!/usr/bin/env node
const program = require('../lib/program')

program
.option('-t, --type', 'include properties types')
.option('-r, --reset', 'clear properties cache')
.process('props')

const getLangProps = require('../lib/get_lang_props')
const resetProperties = require('../lib/reset_properties')
const formatOneLinePerProperty = require('../lib/format_one_line_per_property')
const errors_ = require('../lib/errors')

if (program.reset) return resetProperties()

// Any additional arguments are interpreted as a pattern that properties should match
// `wd props some pattern` <=> `wd props | grep -i "some pattern"`
const pattern = program.args.join(' ')
let filter
if (pattern && pattern.length > 0) {
  const filterRegex = new RegExp(pattern, 'i')
  filter = value => {
    if (value == null) return false
    if (typeof value === 'object') value = value.value
    return value.match(filterRegex) != null
  }
}

getLangProps(program)
.then(formatOneLinePerProperty(filter))
.then(console.log)
.catch(errors_.exit)
