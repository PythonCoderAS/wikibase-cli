#!/usr/bin/env node
const program = require('commander')
const strings = require('../lib/strings')
const wdk = require('wikidata-sdk')
const error_ = require('../lib/error')
const localLang = require('../lib/local_lang')
const open = require('opn')
  const getSitelinkUrl = require('../lib/get_sitelink_url')

program
.arguments(strings.open.args)
.description(strings.open.description)
.option('-p, --wikipedia', 'open the Wikipedia article instead')
.option('-l, --lang <lang>', 'specify for which language the sitelink should be picked')
.parse(process.argv)

const args = program.args
if (args.length === 0) return program.help()

const lang = program.lang || localLang || 'en'
const idString = args[0]

// Accept any string that might contain a Wikidata id and keep only the id
// Useful to parse urls containing Wikidata ids
// Ex: https://inventaire.io/entity/wd:Q33977
const match = idString.match(/(Q|P)\d+/)

if (!match) {
  error_.log('Wikidata entity or property id not found', true)
}

const id = match[0]

if (program.wikipedia) {
  getSitelinkUrl(id, lang, 'wiki')
  .then(open)
  .catch((err) => {
    console.error('Wikipedia article not found: opening Wikidata page on sitelinks')
    open(`https://wikidata.org/wiki/${id}#sitelinks-wikipedia`)
  })
} else {
  if (id[0] === 'Q') {
    open(`https://wikidata.org/wiki/${id}`)
  } else {
    open(`https://www.wikidata.org/wiki/Property:${id}`)
  }
}
