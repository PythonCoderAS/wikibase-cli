#!/usr/bin/env node
const program = require('../lib/program')

program
.option('-p, --wikipedia', 'open the Wikipedia article instead')
.option('-u, --url', 'simply generate the url')
.process('open')

const getSitelinkUrl = require('../lib/get_sitelink_url')(program)
const parseId = require('../lib/tolerant_id_parser')
const copy = require('../lib/copy')
const open = require('opn')
const customWikibaseInstance = require('../lib/custom_wikibase_instance')
const { isCustomized, customizeHost } = customWikibaseInstance(program)

const { args } = program
if (args.length === 0) return program.help()

const lang = program.lang
const ids = args.map(parseId)

const { url:urlOnly, clipboard } = program

const handle = url => {
  if (isCustomized) url = customizeHost(url)
  if (urlOnly) {
    clipboard ? copy(url) : console.log(url)
  } else {
    if (clipboard) copy(url)
    open(url)
  }
}

if (!ids) {
  const search = encodeURIComponent(args.join(' '))
  if (program.wikipedia) {
    // TODO: fix issue with the order of arguments when the option -p is before the search terms
    handle(`https://${lang}.wikipedia.org/w/index.php?title=Special:Search&search=${search}`)
  } else {
    handle(`https://wikidata.org/w/index.php?title=Special:Search&search=${search}`)
  }
  return
}

const openId = id => {
  if (program.wikipedia) {
    getSitelinkUrl(id, lang, 'wiki')
    .then(handle)
    .catch(err => {
      console.error('Wikipedia article not found: opening Wikidata page on sitelinks')
      handle(`https://wikidata.org/wiki/${id}#sitelinks-wikipedia`)
    })
  } else {
    handle(`https://wikidata.org/entity/${id}`)
  }
}

ids.forEach(openId)
