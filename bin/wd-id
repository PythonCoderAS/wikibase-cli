#!/usr/bin/env node
const program = require('../lib/program')
const chalk = require('chalk')

program.process('id')

const args = program.args
if (args.length === 0) return program.help()

const wdk = require('wikidata-sdk')
const lightGet = require('../lib/light_get')
const error_ = require('../lib/error')
const _ = require('lodash')
const getRedirectedWikipediaTitle = require('../lib/get_redirected_wikipedia_title')

const last = args.slice(-1)[0]
var {Â lang } = program
const output = require('../lib/output')(program)

// allow to pass a title without having to put it in ""
var title = args.join(' ')

// parse the url if a wikipedia url was provided as title
const re = /https:\/\/\w{2,4}\.wikipedia\.org\/wiki\//
if (title.match(re)){
  lang = title.replace(/https:\/\/(\w{2,4}).wikipedia.org\/wiki\/.*/, '$1')
  title = title.replace(/https:\/\/\w{2,4}.wikipedia.org\/wiki\/(.*)/, '$1')
  title = global.decodeURIComponent(title)
}

// Capitalizing the first letter makes it more conveninent for one-word queries
// but quite randome for multi-word queries or just one-word queries
// with title that don't take an capital
// Might need to be removed :/
title = title[0].toUpperCase() + title.slice(1)

function parseIds (context, body) {
  const entities = body.entities
  if (entities == null) {
    throw error_.new('received an empty response', body)
  }
  const ids = Object.keys(entities)
  if (ids.length === 1 && ids[0] !== '-1') {
    id = ids[0]
    const descriptions = formatDescriptions(entities[id].descriptions)
    output(descriptions, true)
    output(id)
  } else {
    titles = context.join(' / ')
    throw error_.new(`id not found (${titles})`, body)
  }
}

function formatDescriptions (descriptions) {
  return _.values(descriptions)
    .map(_.property('value'))
    .join('\n')
}

getRedirectedWikipediaTitle(lang, title)
.then((trueTitle) => {
  const url = wdk.getWikidataIdsFromSitelinks(trueTitle, lang)
  return lightGet(url)
  .then(parseIds.bind(null, [title, trueTitle]))
})
.catch(error_.log)
