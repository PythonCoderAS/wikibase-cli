#!/usr/bin/env node
const program = require('commander')
const strings = require('../lib/strings')

program
.arguments(strings.label.args)
.description(strings.label.description)
.parse(process.argv)

var args = program.args

var wdk = require('wikidata-sdk')
var copy = require('../lib/copy')
var breq = require('bluereq')
var error_ = require('../lib/error')
var localLang = require('../lib/local_lang')

var id = args[0]
var lang = args[1] || localLang || 'en'

if (!(id && lang)) return program.help()

try {
  id = wdk.normalizeId(id)
} catch (err) {
  err.context = {id: id, lang: lang, args: args}
  error_.log(err)
}

var languages = [lang]
if (lang !== 'en') {
  // always request the English label as a fallback
  languages.push('en')
}

var url = wdk.getEntities(id, languages, 'labels')

function parseLabel (res) {
  var entity = res.body.entities[id]
  if (entity.missing != null) {
    console.error('entity not found'.red, id)
    return
  }
  var label = entity.labels[lang] || entity.labels['en']
  if (label != null) {
    copy(label.value)
  } else {
    console.error('entity label not found'.red)
  }
}

breq.get(url)
.then(parseLabel)
.catch(error_.log)
