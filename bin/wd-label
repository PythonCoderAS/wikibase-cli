#!/usr/bin/env node
const program = require('../lib/program')
const chalk   = require('chalk')

program.process('label')

const args = program.args

const wdk = require('wikidata-sdk')
const copy = require('../lib/copy')
const breq = require('bluereq')
const error_ = require('../lib/error')

const id = args[0]
const lang = program.lang

if (!(id && lang)) return program.help()

try {
  id = wdk.normalizeId(id)
} catch (err) {
  err.context = {id: id, lang: lang, args: args}
  error_.log(err)
}

const languages = [lang]
if (lang !== 'en') {
  // always request the English label as a fallback
  languages.push('en')
}

const url = wdk.getEntities(id, languages, 'labels')

function parseLabel (res) {
  const entity = res.body.entities[id]
  if (entity.missing != null) {
    console.error(chalk.red('entity not found: %s'), id)
    return
  }
  const label = entity.labels[lang] || entity.labels['en']
  if (label != null) {
    copy(label.value)
  } else {
    console.error(chalk.red('entity label not found'))
  }
}

breq.get(url)
.then(parseLabel)
.catch(error_.log)
