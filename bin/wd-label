#!/usr/bin/env node
const program = require('../lib/program')

program.process('label')

const chalk   = require('chalk')
const wdk = require('wikidata-sdk')
const lightGet = require('../lib/light_get')
const error_ = require('../lib/error')
const parseId = require('../lib/tolerant_id_parser')
const output = require('../lib/output')(program)

const { args } = program

var id = parseId(args[0])
output(`found id: ${id}`, true)
const { lang } = program

if (!(id && lang)) return program.help()

const languages = [lang]
if (lang !== 'en') {
  // always request the English label as a fallback
  languages.push('en')
}

const url = wdk.getEntities(id, languages, 'labels')

function parseLabel (body) {
  const entity = body.entities[id]
  if (entity.missing != null) {
    console.error(chalk.red('entity not found: %s'), id)
    return
  }
  const label = entity.labels[lang] || entity.labels['en']
  if (label != null) {
    output(label.value)
  } else {
    console.error(chalk.red('entity label not found'))
  }
}

lightGet(url)
.then(parseLabel)
.catch(error_.log)
